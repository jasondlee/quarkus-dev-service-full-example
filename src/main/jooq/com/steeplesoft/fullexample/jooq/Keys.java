/*
 * This file is generated by jOOQ.
 */
package com.steeplesoft.fullexample.jooq;


import com.steeplesoft.fullexample.jooq.tables.Authors;
import com.steeplesoft.fullexample.jooq.tables.Books;
import com.steeplesoft.fullexample.jooq.tables.FlywaySchemaHistory;
import com.steeplesoft.fullexample.jooq.tables.records.AuthorsRecord;
import com.steeplesoft.fullexample.jooq.tables.records.BooksRecord;
import com.steeplesoft.fullexample.jooq.tables.records.FlywaySchemaHistoryRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthorsRecord> AUTHORS_PKEY = Internal.createUniqueKey(Authors.AUTHORS, DSL.name("authors_pkey"), new TableField[] { Authors.AUTHORS.ID }, true);
    public static final UniqueKey<BooksRecord> BOOKS_PKEY = Internal.createUniqueKey(Books.BOOKS, DSL.name("books_pkey"), new TableField[] { Books.BOOKS.ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BooksRecord, AuthorsRecord> BOOKS__BOOKS_AUTHOR_ID_FKEY = Internal.createForeignKey(Books.BOOKS, DSL.name("books_author_id_fkey"), new TableField[] { Books.BOOKS.AUTHOR_ID }, Keys.AUTHORS_PKEY, new TableField[] { Authors.AUTHORS.ID }, true);
}
