/*
 * This file is generated by jOOQ.
 */
package com.steeplesoft.fullexample.jooq.tables.records;


import com.steeplesoft.fullexample.jooq.tables.Books;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BooksRecord extends UpdatableRecordImpl<BooksRecord> implements Record5<Integer, String, String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.books.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.books.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.books.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.books.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.books.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.books.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.books.published_year</code>.
     */
    public void setPublishedYear(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.books.published_year</code>.
     */
    public Integer getPublishedYear() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.books.author_id</code>.
     */
    public void setAuthorId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.books.author_id</code>.
     */
    public Integer getAuthorId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Books.BOOKS.ID;
    }

    @Override
    public Field<String> field2() {
        return Books.BOOKS.TITLE;
    }

    @Override
    public Field<String> field3() {
        return Books.BOOKS.DESCRIPTION;
    }

    @Override
    public Field<Integer> field4() {
        return Books.BOOKS.PUBLISHED_YEAR;
    }

    @Override
    public Field<Integer> field5() {
        return Books.BOOKS.AUTHOR_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Integer component4() {
        return getPublishedYear();
    }

    @Override
    public Integer component5() {
        return getAuthorId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Integer value4() {
        return getPublishedYear();
    }

    @Override
    public Integer value5() {
        return getAuthorId();
    }

    @Override
    public BooksRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public BooksRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public BooksRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public BooksRecord value4(Integer value) {
        setPublishedYear(value);
        return this;
    }

    @Override
    public BooksRecord value5(Integer value) {
        setAuthorId(value);
        return this;
    }

    @Override
    public BooksRecord values(Integer value1, String value2, String value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BooksRecord
     */
    public BooksRecord() {
        super(Books.BOOKS);
    }

    /**
     * Create a detached, initialised BooksRecord
     */
    public BooksRecord(Integer id, String title, String description, Integer publishedYear, Integer authorId) {
        super(Books.BOOKS);

        setId(id);
        setTitle(title);
        setDescription(description);
        setPublishedYear(publishedYear);
        setAuthorId(authorId);
    }
}
